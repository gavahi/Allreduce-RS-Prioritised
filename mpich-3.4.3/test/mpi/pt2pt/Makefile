# Makefile.in generated by automake 1.15.1 from Makefile.am.
# pt2pt/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2017 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

MAKE=make

am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/mpich-testsuite
pkgincludedir = $(includedir)/mpich-testsuite
pkglibdir = $(libdir)/mpich-testsuite
pkglibexecdir = $(libexecdir)/mpich-testsuite
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = x86_64-pc-linux-gnu
noinst_PROGRAMS = anyall$(EXEEXT) bottom$(EXEEXT) bsend1$(EXEEXT) \
	bsend2$(EXEEXT) bsend3$(EXEEXT) bsend4$(EXEEXT) \
	bsend5$(EXEEXT) bsendalign$(EXEEXT) cancelrecv$(EXEEXT) \
	cancelanysrc$(EXEEXT) isendself$(EXEEXT) \
	issendselfcancel$(EXEEXT) isendirecv$(EXEEXT) eagerdt$(EXEEXT) \
	isendselfprobe$(EXEEXT) bsendfrag$(EXEEXT) \
	bsendpending$(EXEEXT) icsend$(EXEEXT) icprobe$(EXEEXT) \
	rqstatus$(EXEEXT) rqfreeb$(EXEEXT) greq1$(EXEEXT) \
	scancel$(EXEEXT) scancel2$(EXEEXT) rcancel$(EXEEXT) \
	pscancel$(EXEEXT) scancel_unmatch$(EXEEXT) sendflood$(EXEEXT) \
	sendrecv2$(EXEEXT) sendrecv3$(EXEEXT) waitany_null$(EXEEXT) \
	probe_unexp$(EXEEXT) probenull$(EXEEXT) inactivereq$(EXEEXT) \
	waittestnull$(EXEEXT) sendall$(EXEEXT) large_message$(EXEEXT) \
	mprobe$(EXEEXT) big_count_status$(EXEEXT) many_isend$(EXEEXT) \
	manylmt$(EXEEXT) huge_underflow$(EXEEXT) huge_anysrc$(EXEEXT) \
	huge_dupcomm$(EXEEXT) huge_ssend$(EXEEXT) \
	multi_psend_derived$(EXEEXT) dtype_send$(EXEEXT) \
	recv_any$(EXEEXT) irecv_any$(EXEEXT) large_tag$(EXEEXT) \
	pingping$(EXEEXT) pingping_barrier$(EXEEXT) sendrecv1$(EXEEXT) \
	sendself$(EXEEXT) precv_anysrc$(EXEEXT) \
	precv_anysrc_exp$(EXEEXT)
subdir = pt2pt
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/confdb/aclocal_cache.m4 \
	$(top_srcdir)/confdb/aclocal_cc.m4 \
	$(top_srcdir)/confdb/aclocal_cxx.m4 \
	$(top_srcdir)/confdb/aclocal_f77.m4 \
	$(top_srcdir)/confdb/aclocal_fc.m4 \
	$(top_srcdir)/confdb/aclocal_libs.m4 \
	$(top_srcdir)/confdb/aclocal_make.m4 \
	$(top_srcdir)/confdb/aclocal_runlog.m4 \
	$(top_srcdir)/confdb/aclocal_threads.m4 \
	$(top_srcdir)/confdb/aclocal_util.m4 \
	$(top_srcdir)/confdb/libtool.m4 \
	$(top_srcdir)/confdb/ltoptions.m4 \
	$(top_srcdir)/confdb/ltsugar.m4 \
	$(top_srcdir)/confdb/ltversion.m4 \
	$(top_srcdir)/confdb/lt~obsolete.m4 $(top_srcdir)/version.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/include/mpitestconf.h
CONFIG_CLEAN_FILES = testlist
CONFIG_CLEAN_VPATH_FILES =
PROGRAMS = $(noinst_PROGRAMS)
anyall_SOURCES = anyall.c
anyall_OBJECTS = anyall.$(OBJEXT)
anyall_LDADD = $(LDADD)
anyall_DEPENDENCIES = $(top_builddir)/util/mtest.$(OBJEXT) \
	$(top_builddir)/util/mtest_common.$(OBJEXT) \
	$(top_builddir)/dtpools/src/libdtpools.la \
	$(top_builddir)/util/mtest_single.$(OBJEXT)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
big_count_status_SOURCES = big_count_status.c
big_count_status_OBJECTS = big_count_status.$(OBJEXT)
big_count_status_LDADD = $(LDADD)
big_count_status_DEPENDENCIES = $(top_builddir)/util/mtest.$(OBJEXT) \
	$(top_builddir)/util/mtest_common.$(OBJEXT) \
	$(top_builddir)/dtpools/src/libdtpools.la \
	$(top_builddir)/util/mtest_single.$(OBJEXT)
bottom_SOURCES = bottom.c
bottom_OBJECTS = bottom.$(OBJEXT)
bottom_LDADD = $(LDADD)
bottom_DEPENDENCIES = $(top_builddir)/util/mtest.$(OBJEXT) \
	$(top_builddir)/util/mtest_common.$(OBJEXT) \
	$(top_builddir)/dtpools/src/libdtpools.la \
	$(top_builddir)/util/mtest_single.$(OBJEXT)
bsend1_SOURCES = bsend1.c
bsend1_OBJECTS = bsend1.$(OBJEXT)
bsend1_LDADD = $(LDADD)
bsend1_DEPENDENCIES = $(top_builddir)/util/mtest.$(OBJEXT) \
	$(top_builddir)/util/mtest_common.$(OBJEXT) \
	$(top_builddir)/dtpools/src/libdtpools.la \
	$(top_builddir)/util/mtest_single.$(OBJEXT)
bsend2_SOURCES = bsend2.c
bsend2_OBJECTS = bsend2.$(OBJEXT)
bsend2_LDADD = $(LDADD)
bsend2_DEPENDENCIES = $(top_builddir)/util/mtest.$(OBJEXT) \
	$(top_builddir)/util/mtest_common.$(OBJEXT) \
	$(top_builddir)/dtpools/src/libdtpools.la \
	$(top_builddir)/util/mtest_single.$(OBJEXT)
bsend3_SOURCES = bsend3.c
bsend3_OBJECTS = bsend3.$(OBJEXT)
bsend3_LDADD = $(LDADD)
bsend3_DEPENDENCIES = $(top_builddir)/util/mtest.$(OBJEXT) \
	$(top_builddir)/util/mtest_common.$(OBJEXT) \
	$(top_builddir)/dtpools/src/libdtpools.la \
	$(top_builddir)/util/mtest_single.$(OBJEXT)
bsend4_SOURCES = bsend4.c
bsend4_OBJECTS = bsend4.$(OBJEXT)
bsend4_LDADD = $(LDADD)
bsend4_DEPENDENCIES = $(top_builddir)/util/mtest.$(OBJEXT) \
	$(top_builddir)/util/mtest_common.$(OBJEXT) \
	$(top_builddir)/dtpools/src/libdtpools.la \
	$(top_builddir)/util/mtest_single.$(OBJEXT)
bsend5_SOURCES = bsend5.c
bsend5_OBJECTS = bsend5.$(OBJEXT)
bsend5_LDADD = $(LDADD)
bsend5_DEPENDENCIES = $(top_builddir)/util/mtest.$(OBJEXT) \
	$(top_builddir)/util/mtest_common.$(OBJEXT) \
	$(top_builddir)/dtpools/src/libdtpools.la \
	$(top_builddir)/util/mtest_single.$(OBJEXT)
bsendalign_SOURCES = bsendalign.c
bsendalign_OBJECTS = bsendalign.$(OBJEXT)
bsendalign_LDADD = $(LDADD)
bsendalign_DEPENDENCIES = $(top_builddir)/util/mtest.$(OBJEXT) \
	$(top_builddir)/util/mtest_common.$(OBJEXT) \
	$(top_builddir)/dtpools/src/libdtpools.la \
	$(top_builddir)/util/mtest_single.$(OBJEXT)
bsendfrag_SOURCES = bsendfrag.c
bsendfrag_OBJECTS = bsendfrag.$(OBJEXT)
bsendfrag_LDADD = $(LDADD)
bsendfrag_DEPENDENCIES = $(top_builddir)/util/mtest.$(OBJEXT) \
	$(top_builddir)/util/mtest_common.$(OBJEXT) \
	$(top_builddir)/dtpools/src/libdtpools.la \
	$(top_builddir)/util/mtest_single.$(OBJEXT)
bsendpending_SOURCES = bsendpending.c
bsendpending_OBJECTS = bsendpending.$(OBJEXT)
bsendpending_LDADD = $(LDADD)
bsendpending_DEPENDENCIES = $(top_builddir)/util/mtest.$(OBJEXT) \
	$(top_builddir)/util/mtest_common.$(OBJEXT) \
	$(top_builddir)/dtpools/src/libdtpools.la \
	$(top_builddir)/util/mtest_single.$(OBJEXT)
cancelanysrc_SOURCES = cancelanysrc.c
cancelanysrc_OBJECTS = cancelanysrc.$(OBJEXT)
cancelanysrc_LDADD = $(LDADD)
cancelanysrc_DEPENDENCIES = $(top_builddir)/util/mtest.$(OBJEXT) \
	$(top_builddir)/util/mtest_common.$(OBJEXT) \
	$(top_builddir)/dtpools/src/libdtpools.la \
	$(top_builddir)/util/mtest_single.$(OBJEXT)
cancelrecv_SOURCES = cancelrecv.c
cancelrecv_OBJECTS = cancelrecv.$(OBJEXT)
cancelrecv_LDADD = $(LDADD)
cancelrecv_DEPENDENCIES = $(top_builddir)/util/mtest.$(OBJEXT) \
	$(top_builddir)/util/mtest_common.$(OBJEXT) \
	$(top_builddir)/dtpools/src/libdtpools.la \
	$(top_builddir)/util/mtest_single.$(OBJEXT)
dtype_send_SOURCES = dtype_send.c
dtype_send_OBJECTS = dtype_send.$(OBJEXT)
dtype_send_LDADD = $(LDADD)
dtype_send_DEPENDENCIES = $(top_builddir)/util/mtest.$(OBJEXT) \
	$(top_builddir)/util/mtest_common.$(OBJEXT) \
	$(top_builddir)/dtpools/src/libdtpools.la \
	$(top_builddir)/util/mtest_single.$(OBJEXT)
eagerdt_SOURCES = eagerdt.c
eagerdt_OBJECTS = eagerdt.$(OBJEXT)
eagerdt_LDADD = $(LDADD)
eagerdt_DEPENDENCIES = $(top_builddir)/util/mtest.$(OBJEXT) \
	$(top_builddir)/util/mtest_common.$(OBJEXT) \
	$(top_builddir)/dtpools/src/libdtpools.la \
	$(top_builddir)/util/mtest_single.$(OBJEXT)
greq1_SOURCES = greq1.c
greq1_OBJECTS = greq1.$(OBJEXT)
greq1_LDADD = $(LDADD)
greq1_DEPENDENCIES = $(top_builddir)/util/mtest.$(OBJEXT) \
	$(top_builddir)/util/mtest_common.$(OBJEXT) \
	$(top_builddir)/dtpools/src/libdtpools.la \
	$(top_builddir)/util/mtest_single.$(OBJEXT)
huge_anysrc_SOURCES = huge_anysrc.c
huge_anysrc_OBJECTS = huge_anysrc.$(OBJEXT)
huge_anysrc_LDADD = $(LDADD)
huge_anysrc_DEPENDENCIES = $(top_builddir)/util/mtest.$(OBJEXT) \
	$(top_builddir)/util/mtest_common.$(OBJEXT) \
	$(top_builddir)/dtpools/src/libdtpools.la \
	$(top_builddir)/util/mtest_single.$(OBJEXT)
huge_dupcomm_SOURCES = huge_dupcomm.c
huge_dupcomm_OBJECTS = huge_dupcomm.$(OBJEXT)
huge_dupcomm_LDADD = $(LDADD)
huge_dupcomm_DEPENDENCIES = $(top_builddir)/util/mtest.$(OBJEXT) \
	$(top_builddir)/util/mtest_common.$(OBJEXT) \
	$(top_builddir)/dtpools/src/libdtpools.la \
	$(top_builddir)/util/mtest_single.$(OBJEXT)
huge_ssend_SOURCES = huge_ssend.c
huge_ssend_OBJECTS = huge_ssend.$(OBJEXT)
huge_ssend_LDADD = $(LDADD)
huge_ssend_DEPENDENCIES = $(top_builddir)/util/mtest.$(OBJEXT) \
	$(top_builddir)/util/mtest_common.$(OBJEXT) \
	$(top_builddir)/dtpools/src/libdtpools.la \
	$(top_builddir)/util/mtest_single.$(OBJEXT)
huge_underflow_SOURCES = huge_underflow.c
huge_underflow_OBJECTS = huge_underflow.$(OBJEXT)
huge_underflow_LDADD = $(LDADD)
huge_underflow_DEPENDENCIES = $(top_builddir)/util/mtest.$(OBJEXT) \
	$(top_builddir)/util/mtest_common.$(OBJEXT) \
	$(top_builddir)/dtpools/src/libdtpools.la \
	$(top_builddir)/util/mtest_single.$(OBJEXT)
icprobe_SOURCES = icprobe.c
icprobe_OBJECTS = icprobe.$(OBJEXT)
icprobe_LDADD = $(LDADD)
icprobe_DEPENDENCIES = $(top_builddir)/util/mtest.$(OBJEXT) \
	$(top_builddir)/util/mtest_common.$(OBJEXT) \
	$(top_builddir)/dtpools/src/libdtpools.la \
	$(top_builddir)/util/mtest_single.$(OBJEXT)
icsend_SOURCES = icsend.c
icsend_OBJECTS = icsend.$(OBJEXT)
icsend_LDADD = $(LDADD)
icsend_DEPENDENCIES = $(top_builddir)/util/mtest.$(OBJEXT) \
	$(top_builddir)/util/mtest_common.$(OBJEXT) \
	$(top_builddir)/dtpools/src/libdtpools.la \
	$(top_builddir)/util/mtest_single.$(OBJEXT)
inactivereq_SOURCES = inactivereq.c
inactivereq_OBJECTS = inactivereq.$(OBJEXT)
inactivereq_LDADD = $(LDADD)
inactivereq_DEPENDENCIES = $(top_builddir)/util/mtest.$(OBJEXT) \
	$(top_builddir)/util/mtest_common.$(OBJEXT) \
	$(top_builddir)/dtpools/src/libdtpools.la \
	$(top_builddir)/util/mtest_single.$(OBJEXT)
am_irecv_any_OBJECTS = irecv_any-recv_any.$(OBJEXT)
irecv_any_OBJECTS = $(am_irecv_any_OBJECTS)
irecv_any_LDADD = $(LDADD)
irecv_any_DEPENDENCIES = $(top_builddir)/util/mtest.$(OBJEXT) \
	$(top_builddir)/util/mtest_common.$(OBJEXT) \
	$(top_builddir)/dtpools/src/libdtpools.la \
	$(top_builddir)/util/mtest_single.$(OBJEXT)
isendirecv_SOURCES = isendirecv.c
isendirecv_OBJECTS = isendirecv.$(OBJEXT)
isendirecv_LDADD = $(LDADD)
isendirecv_DEPENDENCIES = $(top_builddir)/util/mtest.$(OBJEXT) \
	$(top_builddir)/util/mtest_common.$(OBJEXT) \
	$(top_builddir)/dtpools/src/libdtpools.la \
	$(top_builddir)/util/mtest_single.$(OBJEXT)
isendself_SOURCES = isendself.c
isendself_OBJECTS = isendself.$(OBJEXT)
isendself_LDADD = $(LDADD)
isendself_DEPENDENCIES = $(top_builddir)/util/mtest.$(OBJEXT) \
	$(top_builddir)/util/mtest_common.$(OBJEXT) \
	$(top_builddir)/dtpools/src/libdtpools.la \
	$(top_builddir)/util/mtest_single.$(OBJEXT)
isendselfprobe_SOURCES = isendselfprobe.c
isendselfprobe_OBJECTS = isendselfprobe.$(OBJEXT)
isendselfprobe_LDADD = $(LDADD)
isendselfprobe_DEPENDENCIES = $(top_builddir)/util/mtest.$(OBJEXT) \
	$(top_builddir)/util/mtest_common.$(OBJEXT) \
	$(top_builddir)/dtpools/src/libdtpools.la \
	$(top_builddir)/util/mtest_single.$(OBJEXT)
issendselfcancel_SOURCES = issendselfcancel.c
issendselfcancel_OBJECTS = issendselfcancel.$(OBJEXT)
issendselfcancel_LDADD = $(LDADD)
issendselfcancel_DEPENDENCIES = $(top_builddir)/util/mtest.$(OBJEXT) \
	$(top_builddir)/util/mtest_common.$(OBJEXT) \
	$(top_builddir)/dtpools/src/libdtpools.la \
	$(top_builddir)/util/mtest_single.$(OBJEXT)
large_message_SOURCES = large_message.c
large_message_OBJECTS = large_message.$(OBJEXT)
large_message_LDADD = $(LDADD)
large_message_DEPENDENCIES = $(top_builddir)/util/mtest.$(OBJEXT) \
	$(top_builddir)/util/mtest_common.$(OBJEXT) \
	$(top_builddir)/dtpools/src/libdtpools.la \
	$(top_builddir)/util/mtest_single.$(OBJEXT)
large_tag_SOURCES = large_tag.c
large_tag_OBJECTS = large_tag.$(OBJEXT)
large_tag_LDADD = $(LDADD)
large_tag_DEPENDENCIES = $(top_builddir)/util/mtest.$(OBJEXT) \
	$(top_builddir)/util/mtest_common.$(OBJEXT) \
	$(top_builddir)/dtpools/src/libdtpools.la \
	$(top_builddir)/util/mtest_single.$(OBJEXT)
many_isend_SOURCES = many_isend.c
many_isend_OBJECTS = many_isend.$(OBJEXT)
many_isend_LDADD = $(LDADD)
many_isend_DEPENDENCIES = $(top_builddir)/util/mtest.$(OBJEXT) \
	$(top_builddir)/util/mtest_common.$(OBJEXT) \
	$(top_builddir)/dtpools/src/libdtpools.la \
	$(top_builddir)/util/mtest_single.$(OBJEXT)
manylmt_SOURCES = manylmt.c
manylmt_OBJECTS = manylmt.$(OBJEXT)
manylmt_LDADD = $(LDADD)
manylmt_DEPENDENCIES = $(top_builddir)/util/mtest.$(OBJEXT) \
	$(top_builddir)/util/mtest_common.$(OBJEXT) \
	$(top_builddir)/dtpools/src/libdtpools.la \
	$(top_builddir)/util/mtest_single.$(OBJEXT)
mprobe_SOURCES = mprobe.c
mprobe_OBJECTS = mprobe.$(OBJEXT)
mprobe_LDADD = $(LDADD)
mprobe_DEPENDENCIES = $(top_builddir)/util/mtest.$(OBJEXT) \
	$(top_builddir)/util/mtest_common.$(OBJEXT) \
	$(top_builddir)/dtpools/src/libdtpools.la \
	$(top_builddir)/util/mtest_single.$(OBJEXT)
multi_psend_derived_SOURCES = multi_psend_derived.c
multi_psend_derived_OBJECTS = multi_psend_derived.$(OBJEXT)
multi_psend_derived_LDADD = $(LDADD)
multi_psend_derived_DEPENDENCIES =  \
	$(top_builddir)/util/mtest.$(OBJEXT) \
	$(top_builddir)/util/mtest_common.$(OBJEXT) \
	$(top_builddir)/dtpools/src/libdtpools.la \
	$(top_builddir)/util/mtest_single.$(OBJEXT)
am_pingping_OBJECTS = pingping-pingping.$(OBJEXT)
pingping_OBJECTS = $(am_pingping_OBJECTS)
pingping_LDADD = $(LDADD)
pingping_DEPENDENCIES = $(top_builddir)/util/mtest.$(OBJEXT) \
	$(top_builddir)/util/mtest_common.$(OBJEXT) \
	$(top_builddir)/dtpools/src/libdtpools.la \
	$(top_builddir)/util/mtest_single.$(OBJEXT)
am_pingping_barrier_OBJECTS = pingping_barrier-pingping.$(OBJEXT)
pingping_barrier_OBJECTS = $(am_pingping_barrier_OBJECTS)
pingping_barrier_LDADD = $(LDADD)
pingping_barrier_DEPENDENCIES = $(top_builddir)/util/mtest.$(OBJEXT) \
	$(top_builddir)/util/mtest_common.$(OBJEXT) \
	$(top_builddir)/dtpools/src/libdtpools.la \
	$(top_builddir)/util/mtest_single.$(OBJEXT)
precv_anysrc_SOURCES = precv_anysrc.c
precv_anysrc_OBJECTS = precv_anysrc.$(OBJEXT)
precv_anysrc_LDADD = $(LDADD)
precv_anysrc_DEPENDENCIES = $(top_builddir)/util/mtest.$(OBJEXT) \
	$(top_builddir)/util/mtest_common.$(OBJEXT) \
	$(top_builddir)/dtpools/src/libdtpools.la \
	$(top_builddir)/util/mtest_single.$(OBJEXT)
precv_anysrc_exp_SOURCES = precv_anysrc_exp.c
precv_anysrc_exp_OBJECTS = precv_anysrc_exp.$(OBJEXT)
precv_anysrc_exp_LDADD = $(LDADD)
precv_anysrc_exp_DEPENDENCIES = $(top_builddir)/util/mtest.$(OBJEXT) \
	$(top_builddir)/util/mtest_common.$(OBJEXT) \
	$(top_builddir)/dtpools/src/libdtpools.la \
	$(top_builddir)/util/mtest_single.$(OBJEXT)
probe_unexp_SOURCES = probe_unexp.c
probe_unexp_OBJECTS = probe_unexp.$(OBJEXT)
probe_unexp_LDADD = $(LDADD)
probe_unexp_DEPENDENCIES = $(top_builddir)/util/mtest.$(OBJEXT) \
	$(top_builddir)/util/mtest_common.$(OBJEXT) \
	$(top_builddir)/dtpools/src/libdtpools.la \
	$(top_builddir)/util/mtest_single.$(OBJEXT)
probenull_SOURCES = probenull.c
probenull_OBJECTS = probenull.$(OBJEXT)
probenull_LDADD = $(LDADD)
probenull_DEPENDENCIES = $(top_builddir)/util/mtest.$(OBJEXT) \
	$(top_builddir)/util/mtest_common.$(OBJEXT) \
	$(top_builddir)/dtpools/src/libdtpools.la \
	$(top_builddir)/util/mtest_single.$(OBJEXT)
pscancel_SOURCES = pscancel.c
pscancel_OBJECTS = pscancel.$(OBJEXT)
pscancel_LDADD = $(LDADD)
pscancel_DEPENDENCIES = $(top_builddir)/util/mtest.$(OBJEXT) \
	$(top_builddir)/util/mtest_common.$(OBJEXT) \
	$(top_builddir)/dtpools/src/libdtpools.la \
	$(top_builddir)/util/mtest_single.$(OBJEXT)
rcancel_SOURCES = rcancel.c
rcancel_OBJECTS = rcancel.$(OBJEXT)
rcancel_LDADD = $(LDADD)
rcancel_DEPENDENCIES = $(top_builddir)/util/mtest.$(OBJEXT) \
	$(top_builddir)/util/mtest_common.$(OBJEXT) \
	$(top_builddir)/dtpools/src/libdtpools.la \
	$(top_builddir)/util/mtest_single.$(OBJEXT)
recv_any_SOURCES = recv_any.c
recv_any_OBJECTS = recv_any.$(OBJEXT)
recv_any_LDADD = $(LDADD)
recv_any_DEPENDENCIES = $(top_builddir)/util/mtest.$(OBJEXT) \
	$(top_builddir)/util/mtest_common.$(OBJEXT) \
	$(top_builddir)/dtpools/src/libdtpools.la \
	$(top_builddir)/util/mtest_single.$(OBJEXT)
rqfreeb_SOURCES = rqfreeb.c
rqfreeb_OBJECTS = rqfreeb.$(OBJEXT)
rqfreeb_LDADD = $(LDADD)
rqfreeb_DEPENDENCIES = $(top_builddir)/util/mtest.$(OBJEXT) \
	$(top_builddir)/util/mtest_common.$(OBJEXT) \
	$(top_builddir)/dtpools/src/libdtpools.la \
	$(top_builddir)/util/mtest_single.$(OBJEXT)
rqstatus_SOURCES = rqstatus.c
rqstatus_OBJECTS = rqstatus.$(OBJEXT)
rqstatus_LDADD = $(LDADD)
rqstatus_DEPENDENCIES = $(top_builddir)/util/mtest.$(OBJEXT) \
	$(top_builddir)/util/mtest_common.$(OBJEXT) \
	$(top_builddir)/dtpools/src/libdtpools.la \
	$(top_builddir)/util/mtest_single.$(OBJEXT)
scancel_SOURCES = scancel.c
scancel_OBJECTS = scancel.$(OBJEXT)
scancel_LDADD = $(LDADD)
scancel_DEPENDENCIES = $(top_builddir)/util/mtest.$(OBJEXT) \
	$(top_builddir)/util/mtest_common.$(OBJEXT) \
	$(top_builddir)/dtpools/src/libdtpools.la \
	$(top_builddir)/util/mtest_single.$(OBJEXT)
scancel2_SOURCES = scancel2.c
scancel2_OBJECTS = scancel2.$(OBJEXT)
scancel2_LDADD = $(LDADD)
scancel2_DEPENDENCIES = $(top_builddir)/util/mtest.$(OBJEXT) \
	$(top_builddir)/util/mtest_common.$(OBJEXT) \
	$(top_builddir)/dtpools/src/libdtpools.la \
	$(top_builddir)/util/mtest_single.$(OBJEXT)
scancel_unmatch_SOURCES = scancel_unmatch.c
scancel_unmatch_OBJECTS = scancel_unmatch.$(OBJEXT)
scancel_unmatch_LDADD = $(LDADD)
scancel_unmatch_DEPENDENCIES = $(top_builddir)/util/mtest.$(OBJEXT) \
	$(top_builddir)/util/mtest_common.$(OBJEXT) \
	$(top_builddir)/dtpools/src/libdtpools.la \
	$(top_builddir)/util/mtest_single.$(OBJEXT)
sendall_SOURCES = sendall.c
sendall_OBJECTS = sendall.$(OBJEXT)
sendall_LDADD = $(LDADD)
sendall_DEPENDENCIES = $(top_builddir)/util/mtest.$(OBJEXT) \
	$(top_builddir)/util/mtest_common.$(OBJEXT) \
	$(top_builddir)/dtpools/src/libdtpools.la \
	$(top_builddir)/util/mtest_single.$(OBJEXT)
sendflood_SOURCES = sendflood.c
sendflood_OBJECTS = sendflood.$(OBJEXT)
sendflood_LDADD = $(LDADD)
sendflood_DEPENDENCIES = $(top_builddir)/util/mtest.$(OBJEXT) \
	$(top_builddir)/util/mtest_common.$(OBJEXT) \
	$(top_builddir)/dtpools/src/libdtpools.la \
	$(top_builddir)/util/mtest_single.$(OBJEXT)
am_sendrecv1_OBJECTS = sendrecv1-sendrecv1.$(OBJEXT)
sendrecv1_OBJECTS = $(am_sendrecv1_OBJECTS)
sendrecv1_LDADD = $(LDADD)
sendrecv1_DEPENDENCIES = $(top_builddir)/util/mtest.$(OBJEXT) \
	$(top_builddir)/util/mtest_common.$(OBJEXT) \
	$(top_builddir)/dtpools/src/libdtpools.la \
	$(top_builddir)/util/mtest_single.$(OBJEXT)
sendrecv2_SOURCES = sendrecv2.c
sendrecv2_OBJECTS = sendrecv2.$(OBJEXT)
sendrecv2_LDADD = $(LDADD)
sendrecv2_DEPENDENCIES = $(top_builddir)/util/mtest.$(OBJEXT) \
	$(top_builddir)/util/mtest_common.$(OBJEXT) \
	$(top_builddir)/dtpools/src/libdtpools.la \
	$(top_builddir)/util/mtest_single.$(OBJEXT)
sendrecv3_SOURCES = sendrecv3.c
sendrecv3_OBJECTS = sendrecv3.$(OBJEXT)
sendrecv3_LDADD = $(LDADD)
sendrecv3_DEPENDENCIES = $(top_builddir)/util/mtest.$(OBJEXT) \
	$(top_builddir)/util/mtest_common.$(OBJEXT) \
	$(top_builddir)/dtpools/src/libdtpools.la \
	$(top_builddir)/util/mtest_single.$(OBJEXT)
am_sendself_OBJECTS = sendself-sendself.$(OBJEXT)
sendself_OBJECTS = $(am_sendself_OBJECTS)
sendself_LDADD = $(LDADD)
sendself_DEPENDENCIES = $(top_builddir)/util/mtest.$(OBJEXT) \
	$(top_builddir)/util/mtest_common.$(OBJEXT) \
	$(top_builddir)/dtpools/src/libdtpools.la \
	$(top_builddir)/util/mtest_single.$(OBJEXT)
waitany_null_SOURCES = waitany_null.c
waitany_null_OBJECTS = waitany_null.$(OBJEXT)
waitany_null_LDADD = $(LDADD)
waitany_null_DEPENDENCIES = $(top_builddir)/util/mtest.$(OBJEXT) \
	$(top_builddir)/util/mtest_common.$(OBJEXT) \
	$(top_builddir)/dtpools/src/libdtpools.la \
	$(top_builddir)/util/mtest_single.$(OBJEXT)
waittestnull_SOURCES = waittestnull.c
waittestnull_OBJECTS = waittestnull.$(OBJEXT)
waittestnull_LDADD = $(LDADD)
waittestnull_DEPENDENCIES = $(top_builddir)/util/mtest.$(OBJEXT) \
	$(top_builddir)/util/mtest_common.$(OBJEXT) \
	$(top_builddir)/dtpools/src/libdtpools.la \
	$(top_builddir)/util/mtest_single.$(OBJEXT)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)/include
depcomp = $(SHELL) $(top_srcdir)/confdb/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = anyall.c big_count_status.c bottom.c bsend1.c bsend2.c \
	bsend3.c bsend4.c bsend5.c bsendalign.c bsendfrag.c \
	bsendpending.c cancelanysrc.c cancelrecv.c dtype_send.c \
	eagerdt.c greq1.c huge_anysrc.c huge_dupcomm.c huge_ssend.c \
	huge_underflow.c icprobe.c icsend.c inactivereq.c \
	$(irecv_any_SOURCES) isendirecv.c isendself.c isendselfprobe.c \
	issendselfcancel.c large_message.c large_tag.c many_isend.c \
	manylmt.c mprobe.c multi_psend_derived.c $(pingping_SOURCES) \
	$(pingping_barrier_SOURCES) precv_anysrc.c precv_anysrc_exp.c \
	probe_unexp.c probenull.c pscancel.c rcancel.c recv_any.c \
	rqfreeb.c rqstatus.c scancel.c scancel2.c scancel_unmatch.c \
	sendall.c sendflood.c $(sendrecv1_SOURCES) sendrecv2.c \
	sendrecv3.c $(sendself_SOURCES) waitany_null.c waittestnull.c
DIST_SOURCES = anyall.c big_count_status.c bottom.c bsend1.c bsend2.c \
	bsend3.c bsend4.c bsend5.c bsendalign.c bsendfrag.c \
	bsendpending.c cancelanysrc.c cancelrecv.c dtype_send.c \
	eagerdt.c greq1.c huge_anysrc.c huge_dupcomm.c huge_ssend.c \
	huge_underflow.c icprobe.c icsend.c inactivereq.c \
	$(irecv_any_SOURCES) isendirecv.c isendself.c isendselfprobe.c \
	issendselfcancel.c large_message.c large_tag.c many_isend.c \
	manylmt.c mprobe.c multi_psend_derived.c $(pingping_SOURCES) \
	$(pingping_barrier_SOURCES) precv_anysrc.c precv_anysrc_exp.c \
	probe_unexp.c probenull.c pscancel.c rcancel.c recv_any.c \
	rqfreeb.c rqstatus.c scancel.c scancel2.c scancel_unmatch.c \
	sendall.c sendflood.c $(sendrecv1_SOURCES) sendrecv2.c \
	sendrecv3.c $(sendself_SOURCES) waitany_null.c waittestnull.c
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/testlist.in \
	$(top_srcdir)/Makefile_common.mtest \
	$(top_srcdir)/Makefile_single.mtest \
	$(top_srcdir)/confdb/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
VPATH = VPATH=.:${srcdir}
ACLOCAL = ${SHELL} /home/gavahi/allreduce-RS-Prioritised2/mpich-3.4.3/test/mpi/confdb/missing aclocal-1.15
ALLOCMEMF = allocmemf 1
ALLOCMEMFC = allocmemf90 1
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AR = ar
AUTOCONF = ${SHELL} /home/gavahi/allreduce-RS-Prioritised2/mpich-3.4.3/test/mpi/confdb/missing autoconf
AUTOHEADER = ${SHELL} /home/gavahi/allreduce-RS-Prioritised2/mpich-3.4.3/test/mpi/confdb/missing autoheader
AUTOMAKE = ${SHELL} /home/gavahi/allreduce-RS-Prioritised2/mpich-3.4.3/test/mpi/confdb/missing automake-1.15
AWK = gawk
CC = /home/gavahi/allreduce-RS-Prioritised2/mpich-3.4.3/Install_mpich/bin/mpicc
CCDEPMODE = depmode=gcc3
CFLAGS = 
CPP = gcc -std=gnu99 -std=gnu99 -E
CPPFLAGS = 
CXX = /home/gavahi/allreduce-RS-Prioritised2/mpich-3.4.3/Install_mpich/bin/mpicxx
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DTP_SWITCH = ON
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
F03SPAWNARGTEST = 
F77 = /home/gavahi/allreduce-RS-Prioritised2/mpich-3.4.3/Install_mpich/bin/mpif77
F77SPAWNARGTEST = 
F77_GETARG_LIBS = 
F77_MPI_ADDRESS = integer*8
F77_MPI_OFFSET = integer*8
F77_NAME_MANGLE = F77_NAME_LOWER_USCORE
FC = /home/gavahi/allreduce-RS-Prioritised2/mpich-3.4.3/Install_mpich/bin/mpifort
FCFLAGS = -fcray-pointer
FCFLAGS_f90 = 
FCMODEXT = mod
FCMODINCFLAG = -I
FCMODOUTFLAG = -J
FC_GETARG_LIBS = 
FC_WORK_FILES_ARG = 
FFLAGS = -fcray-pointer
FGREP = /usr/bin/grep -F
FLIBS =  -L/usr/lib/gcc/x86_64-redhat-linux/4.8.5 -L/usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../lib64 -L/lib/../lib64 -L/usr/lib/../lib64 -L/usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../.. -lgfortran -lm -lquadmath
FROM_MPICH = yes
GREP = /usr/bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld -m elf_x86_64 -m elf_x86_64
LDFLAGS = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
MAINT = 
MAKE = make
MAKEINFO = ${SHELL} /home/gavahi/allreduce-RS-Prioritised2/mpich-3.4.3/test/mpi/confdb/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = mkdir -p
MPICC = 
MPICH_ENABLE_CXX = yes
MPICH_ENABLE_F77 = yes
MPICH_ENABLE_FC = yes
MPICH_THREAD_LEVEL = MPI_THREAD_MULTIPLE
MPICXX = 
MPIEXEC = /home/gavahi/allreduce-RS-Prioritised2/mpich-3.4.3/Install_mpich/bin/mpiexec
MPIF77 = 
MPIFC = 
MPILIBLOC = 
MPILIBNAME = mpi
MPI_HAS_MPIX = yes
MPI_IS_STRICT = false
MPI_NO_RMA = 
MPI_NO_SPAWN = 
MPI_SIZEOF_AINT = 8
MPI_SIZEOF_OFFSET = 8
MPI_SOURCE = 
MPI_SUBVERSION = 1
MPI_VERSION = 3
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = mpich-testsuite
PACKAGE_BUGREPORT = discuss@mpich.org
PACKAGE_NAME = mpich-testsuite
PACKAGE_STRING = mpich-testsuite 3.4.3
PACKAGE_TARNAME = mpich-testsuite
PACKAGE_URL = http://www.mpich.org/
PACKAGE_VERSION = 3.4.3
PATH_SEPARATOR = :
PERL = /usr/bin/perl
RANLIB = ranlib
RUN_XFAIL = false
SED = /usr/bin/sed
SET_CFLAGS = CFLAGS=
SET_MAKE = MAKE=make
SHELL = /bin/sh
STRIP = strip
VERSION = 3.4.3
WRAPPER_CFLAGS = 
WRAPPER_CPPFLAGS = 
WRAPPER_CXXFLAGS = 
WRAPPER_FCFLAGS = 
WRAPPER_FFLAGS = 
WRAPPER_LDFLAGS =  
WRAPPER_LIBS = -lm   -lpthread  -lrt 
abs_builddir = /home/gavahi/allreduce-RS-Prioritised2/mpich-3.4.3/test/mpi/pt2pt
abs_srcdir = /home/gavahi/allreduce-RS-Prioritised2/mpich-3.4.3/test/mpi/pt2pt
abs_top_builddir = /home/gavahi/allreduce-RS-Prioritised2/mpich-3.4.3/test/mpi
abs_top_srcdir = /home/gavahi/allreduce-RS-Prioritised2/mpich-3.4.3/test/mpi
ac_ct_AR = ar
ac_ct_CC = gcc -std=gnu99 -std=gnu99
ac_ct_CXX = 
ac_ct_DUMPBIN = 
ac_ct_F77 = 
ac_ct_FC = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
ch3_tests = 
ch4_ofi_tests = #
ch4_tests = #
ch4_ucx_tests = #
ckpointdir = #ckpoint
comm_overlap = 
cuda_CPPFLAGS = 
cuda_LDFLAGS = 
cuda_LIBS = 
cxxdir = cxx
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
errordir = errors
exec_prefix = ${prefix}
f08dir = #
f77dir = f77
f90dir = f90
faultsdir = #
ftdir = #ft
host = x86_64-pc-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
impldir = mpich
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/gavahi/allreduce-RS-Prioritised2/mpich-3.4.3/test/mpi/confdb/install-sh
iodir = io
largetest = #
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
main_top_builddir = /home/gavahi/allreduce-RS-Prioritised2/mpich-3.4.3
main_top_srcdir = /home/gavahi/allreduce-RS-Prioritised2/mpich-3.4.3
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
mpich_top_srcdir = /home/gavahi/allreduce-RS-Prioritised2/mpich-3.4.3
mpix = 
namepub_tests = 
nocxxdistgraph = #
nslib = 
oldincludedir = /usr/include
otherlangs =  f77 f90 cxx
pdfdir = ${docdir}
perfdir = perf
prefix = /home/gavahi/allreduce-RS-Prioritised2/mpich-3.4.3/Install_mpich
program_transform_name = s,x,x,
psdir = ${docdir}
rmadir = rma
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
socklib = 
spawndir = spawn
srcdir = .
subdirs =  dtpools
sysconfdir = ${prefix}/etc
target_alias = 
threadlib = -lpthread
threadsdir = threads
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
ze_CPPFLAGS = 
ze_LDFLAGS = 
ze_LIBS = 

# AM_CPPFLAGS are used for C++ code as well

# Add libdtpools support
AM_CPPFLAGS = -I$(top_builddir)/include -I$(top_srcdir)/include \
	  -I$(top_srcdir)/dtpools/include
AM_LDFLAGS =  
LDADD = $(top_builddir)/util/mtest.$(OBJEXT) \
	$(top_builddir)/util/mtest_common.$(OBJEXT)  \
	 $(top_builddir)/dtpools/src/libdtpools.la \
	$(top_builddir)/util/mtest_single.$(OBJEXT)
CLEANFILES = $(SUMMARY_BASENAME).xml $(SUMMARY_BASENAME).tap $(SUMMARY_BASENAME).junit.xml
EXTRA_DIST = testlist
irecv_any_CPPFLAGS = -DTEST_NB $(AM_CPPFLAGS)
irecv_any_SOURCES = recv_any.c
pingping_CPPFLAGS = $(AM_CPPFLAGS)
pingping_SOURCES = pingping.c
pingping_barrier_CPPFLAGS = $(AM_CPPFLAGS) -DUSE_BARRIER
pingping_barrier_SOURCES = pingping.c
sendrecv1_CPPFLAGS = $(AM_CPPFLAGS)
sendrecv1_SOURCES = sendrecv1.c
sendself_CPPFLAGS = $(AM_CPPFLAGS)
sendself_SOURCES = sendself.c
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/Makefile_single.mtest $(top_srcdir)/Makefile_common.mtest $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign pt2pt/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign pt2pt/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(top_srcdir)/Makefile_single.mtest $(top_srcdir)/Makefile_common.mtest $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
testlist: $(top_builddir)/config.status $(srcdir)/testlist.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

anyall$(EXEEXT): $(anyall_OBJECTS) $(anyall_DEPENDENCIES) $(EXTRA_anyall_DEPENDENCIES) 
	@rm -f anyall$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(anyall_OBJECTS) $(anyall_LDADD) $(LIBS)

big_count_status$(EXEEXT): $(big_count_status_OBJECTS) $(big_count_status_DEPENDENCIES) $(EXTRA_big_count_status_DEPENDENCIES) 
	@rm -f big_count_status$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(big_count_status_OBJECTS) $(big_count_status_LDADD) $(LIBS)

bottom$(EXEEXT): $(bottom_OBJECTS) $(bottom_DEPENDENCIES) $(EXTRA_bottom_DEPENDENCIES) 
	@rm -f bottom$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(bottom_OBJECTS) $(bottom_LDADD) $(LIBS)

bsend1$(EXEEXT): $(bsend1_OBJECTS) $(bsend1_DEPENDENCIES) $(EXTRA_bsend1_DEPENDENCIES) 
	@rm -f bsend1$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(bsend1_OBJECTS) $(bsend1_LDADD) $(LIBS)

bsend2$(EXEEXT): $(bsend2_OBJECTS) $(bsend2_DEPENDENCIES) $(EXTRA_bsend2_DEPENDENCIES) 
	@rm -f bsend2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(bsend2_OBJECTS) $(bsend2_LDADD) $(LIBS)

bsend3$(EXEEXT): $(bsend3_OBJECTS) $(bsend3_DEPENDENCIES) $(EXTRA_bsend3_DEPENDENCIES) 
	@rm -f bsend3$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(bsend3_OBJECTS) $(bsend3_LDADD) $(LIBS)

bsend4$(EXEEXT): $(bsend4_OBJECTS) $(bsend4_DEPENDENCIES) $(EXTRA_bsend4_DEPENDENCIES) 
	@rm -f bsend4$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(bsend4_OBJECTS) $(bsend4_LDADD) $(LIBS)

bsend5$(EXEEXT): $(bsend5_OBJECTS) $(bsend5_DEPENDENCIES) $(EXTRA_bsend5_DEPENDENCIES) 
	@rm -f bsend5$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(bsend5_OBJECTS) $(bsend5_LDADD) $(LIBS)

bsendalign$(EXEEXT): $(bsendalign_OBJECTS) $(bsendalign_DEPENDENCIES) $(EXTRA_bsendalign_DEPENDENCIES) 
	@rm -f bsendalign$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(bsendalign_OBJECTS) $(bsendalign_LDADD) $(LIBS)

bsendfrag$(EXEEXT): $(bsendfrag_OBJECTS) $(bsendfrag_DEPENDENCIES) $(EXTRA_bsendfrag_DEPENDENCIES) 
	@rm -f bsendfrag$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(bsendfrag_OBJECTS) $(bsendfrag_LDADD) $(LIBS)

bsendpending$(EXEEXT): $(bsendpending_OBJECTS) $(bsendpending_DEPENDENCIES) $(EXTRA_bsendpending_DEPENDENCIES) 
	@rm -f bsendpending$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(bsendpending_OBJECTS) $(bsendpending_LDADD) $(LIBS)

cancelanysrc$(EXEEXT): $(cancelanysrc_OBJECTS) $(cancelanysrc_DEPENDENCIES) $(EXTRA_cancelanysrc_DEPENDENCIES) 
	@rm -f cancelanysrc$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(cancelanysrc_OBJECTS) $(cancelanysrc_LDADD) $(LIBS)

cancelrecv$(EXEEXT): $(cancelrecv_OBJECTS) $(cancelrecv_DEPENDENCIES) $(EXTRA_cancelrecv_DEPENDENCIES) 
	@rm -f cancelrecv$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(cancelrecv_OBJECTS) $(cancelrecv_LDADD) $(LIBS)

dtype_send$(EXEEXT): $(dtype_send_OBJECTS) $(dtype_send_DEPENDENCIES) $(EXTRA_dtype_send_DEPENDENCIES) 
	@rm -f dtype_send$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dtype_send_OBJECTS) $(dtype_send_LDADD) $(LIBS)

eagerdt$(EXEEXT): $(eagerdt_OBJECTS) $(eagerdt_DEPENDENCIES) $(EXTRA_eagerdt_DEPENDENCIES) 
	@rm -f eagerdt$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(eagerdt_OBJECTS) $(eagerdt_LDADD) $(LIBS)

greq1$(EXEEXT): $(greq1_OBJECTS) $(greq1_DEPENDENCIES) $(EXTRA_greq1_DEPENDENCIES) 
	@rm -f greq1$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(greq1_OBJECTS) $(greq1_LDADD) $(LIBS)

huge_anysrc$(EXEEXT): $(huge_anysrc_OBJECTS) $(huge_anysrc_DEPENDENCIES) $(EXTRA_huge_anysrc_DEPENDENCIES) 
	@rm -f huge_anysrc$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(huge_anysrc_OBJECTS) $(huge_anysrc_LDADD) $(LIBS)

huge_dupcomm$(EXEEXT): $(huge_dupcomm_OBJECTS) $(huge_dupcomm_DEPENDENCIES) $(EXTRA_huge_dupcomm_DEPENDENCIES) 
	@rm -f huge_dupcomm$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(huge_dupcomm_OBJECTS) $(huge_dupcomm_LDADD) $(LIBS)

huge_ssend$(EXEEXT): $(huge_ssend_OBJECTS) $(huge_ssend_DEPENDENCIES) $(EXTRA_huge_ssend_DEPENDENCIES) 
	@rm -f huge_ssend$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(huge_ssend_OBJECTS) $(huge_ssend_LDADD) $(LIBS)

huge_underflow$(EXEEXT): $(huge_underflow_OBJECTS) $(huge_underflow_DEPENDENCIES) $(EXTRA_huge_underflow_DEPENDENCIES) 
	@rm -f huge_underflow$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(huge_underflow_OBJECTS) $(huge_underflow_LDADD) $(LIBS)

icprobe$(EXEEXT): $(icprobe_OBJECTS) $(icprobe_DEPENDENCIES) $(EXTRA_icprobe_DEPENDENCIES) 
	@rm -f icprobe$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(icprobe_OBJECTS) $(icprobe_LDADD) $(LIBS)

icsend$(EXEEXT): $(icsend_OBJECTS) $(icsend_DEPENDENCIES) $(EXTRA_icsend_DEPENDENCIES) 
	@rm -f icsend$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(icsend_OBJECTS) $(icsend_LDADD) $(LIBS)

inactivereq$(EXEEXT): $(inactivereq_OBJECTS) $(inactivereq_DEPENDENCIES) $(EXTRA_inactivereq_DEPENDENCIES) 
	@rm -f inactivereq$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(inactivereq_OBJECTS) $(inactivereq_LDADD) $(LIBS)

irecv_any$(EXEEXT): $(irecv_any_OBJECTS) $(irecv_any_DEPENDENCIES) $(EXTRA_irecv_any_DEPENDENCIES) 
	@rm -f irecv_any$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(irecv_any_OBJECTS) $(irecv_any_LDADD) $(LIBS)

isendirecv$(EXEEXT): $(isendirecv_OBJECTS) $(isendirecv_DEPENDENCIES) $(EXTRA_isendirecv_DEPENDENCIES) 
	@rm -f isendirecv$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(isendirecv_OBJECTS) $(isendirecv_LDADD) $(LIBS)

isendself$(EXEEXT): $(isendself_OBJECTS) $(isendself_DEPENDENCIES) $(EXTRA_isendself_DEPENDENCIES) 
	@rm -f isendself$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(isendself_OBJECTS) $(isendself_LDADD) $(LIBS)

isendselfprobe$(EXEEXT): $(isendselfprobe_OBJECTS) $(isendselfprobe_DEPENDENCIES) $(EXTRA_isendselfprobe_DEPENDENCIES) 
	@rm -f isendselfprobe$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(isendselfprobe_OBJECTS) $(isendselfprobe_LDADD) $(LIBS)

issendselfcancel$(EXEEXT): $(issendselfcancel_OBJECTS) $(issendselfcancel_DEPENDENCIES) $(EXTRA_issendselfcancel_DEPENDENCIES) 
	@rm -f issendselfcancel$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(issendselfcancel_OBJECTS) $(issendselfcancel_LDADD) $(LIBS)

large_message$(EXEEXT): $(large_message_OBJECTS) $(large_message_DEPENDENCIES) $(EXTRA_large_message_DEPENDENCIES) 
	@rm -f large_message$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(large_message_OBJECTS) $(large_message_LDADD) $(LIBS)

large_tag$(EXEEXT): $(large_tag_OBJECTS) $(large_tag_DEPENDENCIES) $(EXTRA_large_tag_DEPENDENCIES) 
	@rm -f large_tag$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(large_tag_OBJECTS) $(large_tag_LDADD) $(LIBS)

many_isend$(EXEEXT): $(many_isend_OBJECTS) $(many_isend_DEPENDENCIES) $(EXTRA_many_isend_DEPENDENCIES) 
	@rm -f many_isend$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(many_isend_OBJECTS) $(many_isend_LDADD) $(LIBS)

manylmt$(EXEEXT): $(manylmt_OBJECTS) $(manylmt_DEPENDENCIES) $(EXTRA_manylmt_DEPENDENCIES) 
	@rm -f manylmt$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(manylmt_OBJECTS) $(manylmt_LDADD) $(LIBS)

mprobe$(EXEEXT): $(mprobe_OBJECTS) $(mprobe_DEPENDENCIES) $(EXTRA_mprobe_DEPENDENCIES) 
	@rm -f mprobe$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(mprobe_OBJECTS) $(mprobe_LDADD) $(LIBS)

multi_psend_derived$(EXEEXT): $(multi_psend_derived_OBJECTS) $(multi_psend_derived_DEPENDENCIES) $(EXTRA_multi_psend_derived_DEPENDENCIES) 
	@rm -f multi_psend_derived$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(multi_psend_derived_OBJECTS) $(multi_psend_derived_LDADD) $(LIBS)

pingping$(EXEEXT): $(pingping_OBJECTS) $(pingping_DEPENDENCIES) $(EXTRA_pingping_DEPENDENCIES) 
	@rm -f pingping$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(pingping_OBJECTS) $(pingping_LDADD) $(LIBS)

pingping_barrier$(EXEEXT): $(pingping_barrier_OBJECTS) $(pingping_barrier_DEPENDENCIES) $(EXTRA_pingping_barrier_DEPENDENCIES) 
	@rm -f pingping_barrier$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(pingping_barrier_OBJECTS) $(pingping_barrier_LDADD) $(LIBS)

precv_anysrc$(EXEEXT): $(precv_anysrc_OBJECTS) $(precv_anysrc_DEPENDENCIES) $(EXTRA_precv_anysrc_DEPENDENCIES) 
	@rm -f precv_anysrc$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(precv_anysrc_OBJECTS) $(precv_anysrc_LDADD) $(LIBS)

precv_anysrc_exp$(EXEEXT): $(precv_anysrc_exp_OBJECTS) $(precv_anysrc_exp_DEPENDENCIES) $(EXTRA_precv_anysrc_exp_DEPENDENCIES) 
	@rm -f precv_anysrc_exp$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(precv_anysrc_exp_OBJECTS) $(precv_anysrc_exp_LDADD) $(LIBS)

probe_unexp$(EXEEXT): $(probe_unexp_OBJECTS) $(probe_unexp_DEPENDENCIES) $(EXTRA_probe_unexp_DEPENDENCIES) 
	@rm -f probe_unexp$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(probe_unexp_OBJECTS) $(probe_unexp_LDADD) $(LIBS)

probenull$(EXEEXT): $(probenull_OBJECTS) $(probenull_DEPENDENCIES) $(EXTRA_probenull_DEPENDENCIES) 
	@rm -f probenull$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(probenull_OBJECTS) $(probenull_LDADD) $(LIBS)

pscancel$(EXEEXT): $(pscancel_OBJECTS) $(pscancel_DEPENDENCIES) $(EXTRA_pscancel_DEPENDENCIES) 
	@rm -f pscancel$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(pscancel_OBJECTS) $(pscancel_LDADD) $(LIBS)

rcancel$(EXEEXT): $(rcancel_OBJECTS) $(rcancel_DEPENDENCIES) $(EXTRA_rcancel_DEPENDENCIES) 
	@rm -f rcancel$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(rcancel_OBJECTS) $(rcancel_LDADD) $(LIBS)

recv_any$(EXEEXT): $(recv_any_OBJECTS) $(recv_any_DEPENDENCIES) $(EXTRA_recv_any_DEPENDENCIES) 
	@rm -f recv_any$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(recv_any_OBJECTS) $(recv_any_LDADD) $(LIBS)

rqfreeb$(EXEEXT): $(rqfreeb_OBJECTS) $(rqfreeb_DEPENDENCIES) $(EXTRA_rqfreeb_DEPENDENCIES) 
	@rm -f rqfreeb$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(rqfreeb_OBJECTS) $(rqfreeb_LDADD) $(LIBS)

rqstatus$(EXEEXT): $(rqstatus_OBJECTS) $(rqstatus_DEPENDENCIES) $(EXTRA_rqstatus_DEPENDENCIES) 
	@rm -f rqstatus$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(rqstatus_OBJECTS) $(rqstatus_LDADD) $(LIBS)

scancel$(EXEEXT): $(scancel_OBJECTS) $(scancel_DEPENDENCIES) $(EXTRA_scancel_DEPENDENCIES) 
	@rm -f scancel$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(scancel_OBJECTS) $(scancel_LDADD) $(LIBS)

scancel2$(EXEEXT): $(scancel2_OBJECTS) $(scancel2_DEPENDENCIES) $(EXTRA_scancel2_DEPENDENCIES) 
	@rm -f scancel2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(scancel2_OBJECTS) $(scancel2_LDADD) $(LIBS)

scancel_unmatch$(EXEEXT): $(scancel_unmatch_OBJECTS) $(scancel_unmatch_DEPENDENCIES) $(EXTRA_scancel_unmatch_DEPENDENCIES) 
	@rm -f scancel_unmatch$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(scancel_unmatch_OBJECTS) $(scancel_unmatch_LDADD) $(LIBS)

sendall$(EXEEXT): $(sendall_OBJECTS) $(sendall_DEPENDENCIES) $(EXTRA_sendall_DEPENDENCIES) 
	@rm -f sendall$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sendall_OBJECTS) $(sendall_LDADD) $(LIBS)

sendflood$(EXEEXT): $(sendflood_OBJECTS) $(sendflood_DEPENDENCIES) $(EXTRA_sendflood_DEPENDENCIES) 
	@rm -f sendflood$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sendflood_OBJECTS) $(sendflood_LDADD) $(LIBS)

sendrecv1$(EXEEXT): $(sendrecv1_OBJECTS) $(sendrecv1_DEPENDENCIES) $(EXTRA_sendrecv1_DEPENDENCIES) 
	@rm -f sendrecv1$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sendrecv1_OBJECTS) $(sendrecv1_LDADD) $(LIBS)

sendrecv2$(EXEEXT): $(sendrecv2_OBJECTS) $(sendrecv2_DEPENDENCIES) $(EXTRA_sendrecv2_DEPENDENCIES) 
	@rm -f sendrecv2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sendrecv2_OBJECTS) $(sendrecv2_LDADD) $(LIBS)

sendrecv3$(EXEEXT): $(sendrecv3_OBJECTS) $(sendrecv3_DEPENDENCIES) $(EXTRA_sendrecv3_DEPENDENCIES) 
	@rm -f sendrecv3$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sendrecv3_OBJECTS) $(sendrecv3_LDADD) $(LIBS)

sendself$(EXEEXT): $(sendself_OBJECTS) $(sendself_DEPENDENCIES) $(EXTRA_sendself_DEPENDENCIES) 
	@rm -f sendself$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sendself_OBJECTS) $(sendself_LDADD) $(LIBS)

waitany_null$(EXEEXT): $(waitany_null_OBJECTS) $(waitany_null_DEPENDENCIES) $(EXTRA_waitany_null_DEPENDENCIES) 
	@rm -f waitany_null$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(waitany_null_OBJECTS) $(waitany_null_LDADD) $(LIBS)

waittestnull$(EXEEXT): $(waittestnull_OBJECTS) $(waittestnull_DEPENDENCIES) $(EXTRA_waittestnull_DEPENDENCIES) 
	@rm -f waittestnull$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(waittestnull_OBJECTS) $(waittestnull_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/anyall.Po
include ./$(DEPDIR)/big_count_status.Po
include ./$(DEPDIR)/bottom.Po
include ./$(DEPDIR)/bsend1.Po
include ./$(DEPDIR)/bsend2.Po
include ./$(DEPDIR)/bsend3.Po
include ./$(DEPDIR)/bsend4.Po
include ./$(DEPDIR)/bsend5.Po
include ./$(DEPDIR)/bsendalign.Po
include ./$(DEPDIR)/bsendfrag.Po
include ./$(DEPDIR)/bsendpending.Po
include ./$(DEPDIR)/cancelanysrc.Po
include ./$(DEPDIR)/cancelrecv.Po
include ./$(DEPDIR)/dtype_send.Po
include ./$(DEPDIR)/eagerdt.Po
include ./$(DEPDIR)/greq1.Po
include ./$(DEPDIR)/huge_anysrc.Po
include ./$(DEPDIR)/huge_dupcomm.Po
include ./$(DEPDIR)/huge_ssend.Po
include ./$(DEPDIR)/huge_underflow.Po
include ./$(DEPDIR)/icprobe.Po
include ./$(DEPDIR)/icsend.Po
include ./$(DEPDIR)/inactivereq.Po
include ./$(DEPDIR)/irecv_any-recv_any.Po
include ./$(DEPDIR)/isendirecv.Po
include ./$(DEPDIR)/isendself.Po
include ./$(DEPDIR)/isendselfprobe.Po
include ./$(DEPDIR)/issendselfcancel.Po
include ./$(DEPDIR)/large_message.Po
include ./$(DEPDIR)/large_tag.Po
include ./$(DEPDIR)/many_isend.Po
include ./$(DEPDIR)/manylmt.Po
include ./$(DEPDIR)/mprobe.Po
include ./$(DEPDIR)/multi_psend_derived.Po
include ./$(DEPDIR)/pingping-pingping.Po
include ./$(DEPDIR)/pingping_barrier-pingping.Po
include ./$(DEPDIR)/precv_anysrc.Po
include ./$(DEPDIR)/precv_anysrc_exp.Po
include ./$(DEPDIR)/probe_unexp.Po
include ./$(DEPDIR)/probenull.Po
include ./$(DEPDIR)/pscancel.Po
include ./$(DEPDIR)/rcancel.Po
include ./$(DEPDIR)/recv_any.Po
include ./$(DEPDIR)/rqfreeb.Po
include ./$(DEPDIR)/rqstatus.Po
include ./$(DEPDIR)/scancel.Po
include ./$(DEPDIR)/scancel2.Po
include ./$(DEPDIR)/scancel_unmatch.Po
include ./$(DEPDIR)/sendall.Po
include ./$(DEPDIR)/sendflood.Po
include ./$(DEPDIR)/sendrecv1-sendrecv1.Po
include ./$(DEPDIR)/sendrecv2.Po
include ./$(DEPDIR)/sendrecv3.Po
include ./$(DEPDIR)/sendself-sendself.Po
include ./$(DEPDIR)/waitany_null.Po
include ./$(DEPDIR)/waittestnull.Po

.c.o:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

irecv_any-recv_any.o: recv_any.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(irecv_any_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT irecv_any-recv_any.o -MD -MP -MF $(DEPDIR)/irecv_any-recv_any.Tpo -c -o irecv_any-recv_any.o `test -f 'recv_any.c' || echo '$(srcdir)/'`recv_any.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/irecv_any-recv_any.Tpo $(DEPDIR)/irecv_any-recv_any.Po
#	$(AM_V_CC)source='recv_any.c' object='irecv_any-recv_any.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(irecv_any_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o irecv_any-recv_any.o `test -f 'recv_any.c' || echo '$(srcdir)/'`recv_any.c

irecv_any-recv_any.obj: recv_any.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(irecv_any_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT irecv_any-recv_any.obj -MD -MP -MF $(DEPDIR)/irecv_any-recv_any.Tpo -c -o irecv_any-recv_any.obj `if test -f 'recv_any.c'; then $(CYGPATH_W) 'recv_any.c'; else $(CYGPATH_W) '$(srcdir)/recv_any.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/irecv_any-recv_any.Tpo $(DEPDIR)/irecv_any-recv_any.Po
#	$(AM_V_CC)source='recv_any.c' object='irecv_any-recv_any.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(irecv_any_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o irecv_any-recv_any.obj `if test -f 'recv_any.c'; then $(CYGPATH_W) 'recv_any.c'; else $(CYGPATH_W) '$(srcdir)/recv_any.c'; fi`

pingping-pingping.o: pingping.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pingping_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT pingping-pingping.o -MD -MP -MF $(DEPDIR)/pingping-pingping.Tpo -c -o pingping-pingping.o `test -f 'pingping.c' || echo '$(srcdir)/'`pingping.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/pingping-pingping.Tpo $(DEPDIR)/pingping-pingping.Po
#	$(AM_V_CC)source='pingping.c' object='pingping-pingping.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pingping_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o pingping-pingping.o `test -f 'pingping.c' || echo '$(srcdir)/'`pingping.c

pingping-pingping.obj: pingping.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pingping_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT pingping-pingping.obj -MD -MP -MF $(DEPDIR)/pingping-pingping.Tpo -c -o pingping-pingping.obj `if test -f 'pingping.c'; then $(CYGPATH_W) 'pingping.c'; else $(CYGPATH_W) '$(srcdir)/pingping.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/pingping-pingping.Tpo $(DEPDIR)/pingping-pingping.Po
#	$(AM_V_CC)source='pingping.c' object='pingping-pingping.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pingping_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o pingping-pingping.obj `if test -f 'pingping.c'; then $(CYGPATH_W) 'pingping.c'; else $(CYGPATH_W) '$(srcdir)/pingping.c'; fi`

pingping_barrier-pingping.o: pingping.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pingping_barrier_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT pingping_barrier-pingping.o -MD -MP -MF $(DEPDIR)/pingping_barrier-pingping.Tpo -c -o pingping_barrier-pingping.o `test -f 'pingping.c' || echo '$(srcdir)/'`pingping.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/pingping_barrier-pingping.Tpo $(DEPDIR)/pingping_barrier-pingping.Po
#	$(AM_V_CC)source='pingping.c' object='pingping_barrier-pingping.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pingping_barrier_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o pingping_barrier-pingping.o `test -f 'pingping.c' || echo '$(srcdir)/'`pingping.c

pingping_barrier-pingping.obj: pingping.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pingping_barrier_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT pingping_barrier-pingping.obj -MD -MP -MF $(DEPDIR)/pingping_barrier-pingping.Tpo -c -o pingping_barrier-pingping.obj `if test -f 'pingping.c'; then $(CYGPATH_W) 'pingping.c'; else $(CYGPATH_W) '$(srcdir)/pingping.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/pingping_barrier-pingping.Tpo $(DEPDIR)/pingping_barrier-pingping.Po
#	$(AM_V_CC)source='pingping.c' object='pingping_barrier-pingping.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pingping_barrier_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o pingping_barrier-pingping.obj `if test -f 'pingping.c'; then $(CYGPATH_W) 'pingping.c'; else $(CYGPATH_W) '$(srcdir)/pingping.c'; fi`

sendrecv1-sendrecv1.o: sendrecv1.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sendrecv1_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sendrecv1-sendrecv1.o -MD -MP -MF $(DEPDIR)/sendrecv1-sendrecv1.Tpo -c -o sendrecv1-sendrecv1.o `test -f 'sendrecv1.c' || echo '$(srcdir)/'`sendrecv1.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/sendrecv1-sendrecv1.Tpo $(DEPDIR)/sendrecv1-sendrecv1.Po
#	$(AM_V_CC)source='sendrecv1.c' object='sendrecv1-sendrecv1.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sendrecv1_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sendrecv1-sendrecv1.o `test -f 'sendrecv1.c' || echo '$(srcdir)/'`sendrecv1.c

sendrecv1-sendrecv1.obj: sendrecv1.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sendrecv1_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sendrecv1-sendrecv1.obj -MD -MP -MF $(DEPDIR)/sendrecv1-sendrecv1.Tpo -c -o sendrecv1-sendrecv1.obj `if test -f 'sendrecv1.c'; then $(CYGPATH_W) 'sendrecv1.c'; else $(CYGPATH_W) '$(srcdir)/sendrecv1.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sendrecv1-sendrecv1.Tpo $(DEPDIR)/sendrecv1-sendrecv1.Po
#	$(AM_V_CC)source='sendrecv1.c' object='sendrecv1-sendrecv1.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sendrecv1_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sendrecv1-sendrecv1.obj `if test -f 'sendrecv1.c'; then $(CYGPATH_W) 'sendrecv1.c'; else $(CYGPATH_W) '$(srcdir)/sendrecv1.c'; fi`

sendself-sendself.o: sendself.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sendself_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sendself-sendself.o -MD -MP -MF $(DEPDIR)/sendself-sendself.Tpo -c -o sendself-sendself.o `test -f 'sendself.c' || echo '$(srcdir)/'`sendself.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/sendself-sendself.Tpo $(DEPDIR)/sendself-sendself.Po
#	$(AM_V_CC)source='sendself.c' object='sendself-sendself.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sendself_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sendself-sendself.o `test -f 'sendself.c' || echo '$(srcdir)/'`sendself.c

sendself-sendself.obj: sendself.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sendself_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sendself-sendself.obj -MD -MP -MF $(DEPDIR)/sendself-sendself.Tpo -c -o sendself-sendself.obj `if test -f 'sendself.c'; then $(CYGPATH_W) 'sendself.c'; else $(CYGPATH_W) '$(srcdir)/sendself.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sendself-sendself.Tpo $(DEPDIR)/sendself-sendself.Po
#	$(AM_V_CC)source='sendself.c' object='sendself-sendself.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sendself_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sendself-sendself.obj `if test -f 'sendself.c'; then $(CYGPATH_W) 'sendself.c'; else $(CYGPATH_W) '$(srcdir)/sendself.c'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstPROGRAMS \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-noinstPROGRAMS cscopelist-am ctags \
	ctags-am distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am

.PRECIOUS: Makefile


$(top_builddir)/util/mtest.$(OBJEXT): $(top_srcdir)/util/mtest.c
	(cd $(top_builddir)/util && $(MAKE) mtest.$(OBJEXT))

$(top_builddir)/util/mtest_common.$(OBJEXT): $(top_srcdir)/util/mtest_common.c
	(cd $(top_builddir)/util && $(MAKE) mtest_common.$(OBJEXT))

$(top_builddir)/dtpools/src/libdtpools.la:
	(cd $(top_builddir)/dtpools && $(MAKE))

##TESTDIRS ?= coll,pt2pt,rma
##TESTLIST ?= testlist.gpu
#TESTLIST ?= testlist,testlist.dtp,testlist.cvar,testlist.gpu
TESTLIST ?= testlist,testlist.dtp,testlist.cvar
SUMMARY_BASENAME ?= summary

testing:
	$(top_builddir)/runtests -srcdir=$(srcdir) -tests=$(TESTLIST) -testdirs=$(TESTDIRS) \
		-mpiexec="${MPIEXEC}" -xmlfile=$(SUMMARY_BASENAME).xml \
		-tapfile=$(SUMMARY_BASENAME).tap -junitfile=$(SUMMARY_BASENAME).junit.xml

$(top_builddir)/util/mtest_single.$(OBJEXT): $(top_srcdir)/util/mtest_single.c
	(cd $(top_builddir)/util && $(MAKE) mtest_single.$(OBJEXT))

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
